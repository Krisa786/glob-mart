{
  "info": {
    "name": "GlobeMart API - Sprint 2",
    "description": "Complete API collection for GlobeMart Global International E-commerce Platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "API Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                ""
              ]
            },
            "description": "Get basic API status and information"
          },
          "response": []
        },
        {
          "name": "Comprehensive Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Get detailed health status of all services"
          },
          "response": []
        },
        {
          "name": "Database Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health/db",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health",
                "db"
              ]
            },
            "description": "Check database connection and statistics"
          },
          "response": []
        },
        {
          "name": "Search Service Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health/search",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health",
                "search"
              ]
            },
            "description": "Check search service connection and statistics"
          },
          "response": []
        },
        {
          "name": "System Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health/system",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health",
                "system"
              ]
            },
            "description": "Get detailed system information"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.tokens) {",
                  "        pm.collectionVariables.set(\"accessToken\", response.data.tokens.accessToken);",
                  "        pm.collectionVariables.set(\"refreshToken\", response.data.tokens.refreshToken);",
                  "        pm.collectionVariables.set(\"userId\", response.data.user.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@globemart.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "Authenticate user with email and password"
          },
          "response": []
        },
        {
          "name": "User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "refresh"
              ]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "logout"
              ]
            },
            "description": "Logout user and invalidate tokens"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ]
            },
            "description": "Retrieve all active categories"
          },
          "response": []
        },
        {
          "name": "Get Categories with Children",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories?include_children=true",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories"
              ],
              "query": [
                {
                  "key": "include_children",
                  "value": "true"
                }
              ]
            },
            "description": "Retrieve categories with child categories included"
          },
          "response": []
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "categories",
                "{{categoryId}}"
              ]
            },
            "description": "Get specific category by ID"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ]
            },
            "description": "Retrieve all published products with pagination"
          },
          "response": []
        },
        {
          "name": "Get Products with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products?category_id={{categoryId}}&min_price=10&max_price=100&sort=price_asc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ],
              "query": [
                {
                  "key": "category_id",
                  "value": "{{categoryId}}"
                },
                {
                  "key": "min_price",
                  "value": "10"
                },
                {
                  "key": "max_price",
                  "value": "100"
                },
                {
                  "key": "sort",
                  "value": "price_asc"
                }
              ]
            },
            "description": "Get products with filtering and sorting"
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Get specific product by ID with full details"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Search",
      "item": [
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/search?q=towel&page=1&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "towel"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Search products with query string"
          },
          "response": []
        },
        {
          "name": "Search with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/search?q=spa&category=wellness-spa&badge=organic&min_price=20&max_price=50",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "spa"
                },
                {
                  "key": "category",
                  "value": "wellness-spa"
                },
                {
                  "key": "badge",
                  "value": "organic"
                },
                {
                  "key": "min_price",
                  "value": "20"
                },
                {
                  "key": "max_price",
                  "value": "50"
                }
              ]
            },
            "description": "Search products with advanced filters"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Category\",\n  \"slug\": \"test-category\",\n  \"description\": \"A test category for API testing\",\n  \"parent_id\": null,\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "categories"
              ]
            },
            "description": "Create a new category (Admin only)"
          },
          "response": []
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Product\",\n  \"slug\": \"test-product\",\n  \"sku\": \"TEST-001\",\n  \"short_desc\": \"A test product for API testing\",\n  \"long_desc\": \"This is a comprehensive test product description for API testing purposes.\",\n  \"brand\": \"Test Brand\",\n  \"category_id\": 1,\n  \"price\": 29.99,\n  \"currency\": \"USD\",\n  \"status\": \"published\",\n  \"sustainability_badges\": [\n    \"Test Badge\"\n  ],\n  \"meta\": {\n    \"material\": \"Test Material\",\n    \"weight\": \"1kg\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/admin/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "admin",
                "products"
              ]
            },
            "description": "Create a new product (Admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Documentation",
      "item": [
        {
          "name": "OpenAPI Specification",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/openapi.json",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "openapi.json"
              ]
            },
            "description": "Get OpenAPI 3.0 specification"
          },
          "response": []
        },
        {
          "name": "API Documentation (Swagger UI)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/docs",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "docs"
              ]
            },
            "description": "Access Swagger UI documentation"
          },
          "response": []
        },
        {
          "name": "API Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/info",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "info"
              ]
            },
            "description": "Get API information and endpoints"
          },
          "response": []
        }
      ]
    }
  ]
}